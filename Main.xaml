<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="810,1426" sap2010:WorkflowViewState.IdRef="Main_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:bec="clr-namespace:BalaReva.Excel.Charts;assembly=BalaReva.Excel" xmlns:d="clr-namespace:DownloadFile;assembly=Download File" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="90">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Abbyy.Core.FlexiCapture</x:String>
      <x:String>UiPath.Abbyy.Core.FlexiCapture.Enums</x:String>
      <x:String>UiPath.Abbyy.Core.FlexiCapture.ValidationStationAdapters</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>DownloadFile</x:String>
      <x:String>UiPath.GSuite</x:String>
      <x:String>UiPath.GSuite.Contracts</x:String>
      <x:String>UiPath.GSuite.Activities.Enums</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.GSuite.Activities.Contracts</x:String>
      <x:String>Google.Apis.Drive.v3.Data</x:String>
      <x:String>Google.Apis.Requests</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>DownloadFileFromURL</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>BalaReva.Excel.Charts</x:String>
      <x:String>BalaReva.Excel.Interfaces</x:String>
      <x:String>BalaReva.Excel.Base</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="76">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Abbyy.Activities</AssemblyReference>
      <AssemblyReference>Download File</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Abbyy.Core</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>Google.Apis.Drive.v3</AssemblyReference>
      <AssemblyReference>Google.Apis.Core</AssemblyReference>
      <AssemblyReference>Google.Apis</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>DownloadFileFromURL</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>BalaReva.Excel</AssemblyReference>
      <AssemblyReference>BalaReva.Excel.Base</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="1. Read the image from google drive.&#xA;2. Create a barchart in excel sheet with Date on “X” axis and volume on “Y” axis for the first table in the image." DisplayName="Stock Price Process" sap:VirtualizedContainerService.HintSize="674,1261" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="OutputExists" />
      <Variable x:TypeArguments="sd1:DataTable" Name="StocksDataTable" />
      <Variable x:TypeArguments="x:String" Default="Stock Prices Chart.xlsx" Name="OutputFileName" />
      <Variable x:TypeArguments="x:String" Default="[Environment.CurrentDirectory+ &quot;\Output\&quot;]" Name="OutputPath" />
      <Variable x:TypeArguments="x:String" Default="[Environment.CurrentDirectory+ &quot;\Input\&quot;]" Name="InputPath" />
      <Variable x:TypeArguments="s:String[]" Name="VolumnArray" />
      <Variable x:TypeArguments="s:String[]" Name="DateArray" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,147</av:PointCollection>
        <x:Double x:Key="Width">640</x:Double>
        <x:Double x:Key="Height">1183</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID6</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,147</av:Point>
          <av:Size x:Key="ShapeSize">200,108</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,255 300,316.04</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="Delete old Output files if exists" DisplayName="Delete Old Output" sap:VirtualizedContainerService.HintSize="621,522" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:PathExists DisplayName="Check if any Excel file is already present" Exists="[OutputExists]" sap:VirtualizedContainerService.HintSize="579,89" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[OutputPath+OutputFileName]" PathType="File" />
        <If sap2010:Annotation.AnnotationText="If the Output File exists, else log message" Condition="[OutputExists]" DisplayName="If - check Output present" sap:VirtualizedContainerService.HintSize="579,270" sap2010:WorkflowViewState.IdRef="If_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[OutputPath+OutputFileName]" />
          </If.Then>
          <If.Else>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Old output file does not exists&quot;]" />
          </If.Else>
        </If>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,316.04</av:Point>
              <av:Size x:Key="ShapeSize">200,66</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">300,382.04 300,432.04</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Build - Stocks DataTable" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:BuildDataTable DataTable="[StocksDataTable]" DisplayName="Build Stock Price Data Table" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Date&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Volume&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">200,432.04</av:Point>
                  <av:Size x:Key="ShapeSize">200,108</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">300,540.04 300,607</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence sap2010:Annotation.AnnotationText="Download Stocks Price Image from Google Shared Drive" DisplayName="Download Image from G-Drive" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Default="https://drive.google.com/file/d/1YK5eLqQqJ4_P9SQlNL50LriW37nRAHRm/viewhttps://drive.google.com/file/d/1YK5eLqQqJ4_P9SQlNL50LriW37nRAHRm/view" Name="ImageDownloadURL" />
                  <Variable x:TypeArguments="x:String" Default="911273423221-28plc33mfortdlsgsk8phb3rbdtjln03.apps.googleusercontent.com" Name="GSuite_ClientID" />
                  <Variable x:TypeArguments="x:String" Default="2GO6XpE1Lz39zmHvUHPnJr-k" Name="GSuite_SecretKey" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <d:DownloadFile Result="{x:Null}" DisplayName="Download file" FileURL="https://drive.google.com/u/0/uc?id=1YK5eLqQqJ4_P9SQlNL50LriW37nRAHRm&amp;export=download" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="DownloadFile_3" LocalFilePath="[InputPath+&quot;Stock Prices.png&quot;]" UseBrowserAuthentication="True" UseDefaultProxy="True" />
              </Sequence>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">200,607</av:Point>
                      <av:Size x:Key="ShapeSize">200,66</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">300,673 300,735.04</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Open Stock Price Image" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_22">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:StartProcess WorkingDirectory="{x:Null}" Arguments="[&quot;&quot;&quot;&quot;]" ContinueOnError="True" DisplayName="Start Process" FileName="[InputPath+&quot;Stock Prices.png&quot;]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="StartProcess_1" />
                  </Sequence>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">200,735.04</av:Point>
                          <av:Size x:Key="ShapeSize">200,51</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">300,786.04 300,843.5</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch DisplayName="Try Catch - Scrape Dates &amp; Volume" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <Sequence sap:VirtualizedContainerService.HintSize="518,502" sap2010:WorkflowViewState.IdRef="Sequence_19">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Scrape Volume Data  from the Stock Price Image" sap:VirtualizedContainerService.HintSize="476,304" sap2010:WorkflowViewState.IdRef="Sequence_15">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window Stock Price Image" sap:VirtualizedContainerService.HintSize="434,212" sap2010:WorkflowViewState.IdRef="WindowScope_3" InformativeScreenshot="1394d71cd58f193a353cd539f6d9c4e4" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' /&gt;">
                                <ui:WindowScope.Body>
                                  <ActivityAction x:TypeArguments="x:Object">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Extract Data using OCR Activity" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="VolumeExtract" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'Volume'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_6">
                                        <ui:GetOCRText.OCREngine>
                                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                            <ActivityFunc.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                            </ActivityFunc.Argument>
                                            <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789.," ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_6" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="11" />
                                          </ActivityFunc>
                                        </ui:GetOCRText.OCREngine>
                                        <ui:GetOCRText.Target>
                                          <ui:Target Element="{x:Null}" Id="e3b25561-86d3-498b-88cb-8c964738f9bc" InformativeScreenshot="c4c22ea70bb2c5c61a6d48de4d8e5759" Selector="&lt;uia automationid='ViewerControl' cls='PhotosApp.Viewer.ViewerControl' /&gt;">
                                            <ui:Target.ClippingRegion>
                                              <ui:Region Rectangle="881, 86, 85, 260" />
                                            </ui:Target.ClippingRegion>
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:GetOCRText.Target>
                                        <ui:GetOCRText.Text>
                                          <OutArgument x:TypeArguments="x:String">[VolumeExtract]</OutArgument>
                                        </ui:GetOCRText.Text>
                                      </ui:GetOCRText>
                                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[VolumeExtract]" />
                                      <Assign DisplayName="Convert to Array" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:String[]">[VolumnArray]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:String[]">[VolumeExtract.Split(Environment.NewLine.ToArray,StringSplitOptions.RemoveEmptyEntries)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:WindowScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:WindowScope>
                            </Sequence>
                            <Sequence DisplayName="Scrape Date from the Stock Price " sap:VirtualizedContainerService.HintSize="476,66" sap2010:WorkflowViewState.IdRef="Sequence_18">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window Stock Price" sap:VirtualizedContainerService.HintSize="434,607" sap2010:WorkflowViewState.IdRef="WindowScope_4" InformativeScreenshot="3a332a53bb6720bc24b86295e0b96b52" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' title='*' /&gt;">
                                <ui:WindowScope.Body>
                                  <ActivityAction x:TypeArguments="x:Object">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Extract the Data using OCR" sap:VirtualizedContainerService.HintSize="376,461" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="DateExtact" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'Date'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_8">
                                        <ui:GetOCRText.OCREngine>
                                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                            <ActivityFunc.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                            </ActivityFunc.Argument>
                                            <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_8" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="3">
                                              <ui:GoogleOCR.AllowedCharacters>
                                                <InArgument x:TypeArguments="x:String">
                                                  <Literal x:TypeArguments="x:String" Value="" />
                                                </InArgument>
                                              </ui:GoogleOCR.AllowedCharacters>
                                              <ui:GoogleOCR.DeniedCharacters>
                                                <InArgument x:TypeArguments="x:String">
                                                  <Literal x:TypeArguments="x:String" Value="" />
                                                </InArgument>
                                              </ui:GoogleOCR.DeniedCharacters>
                                            </ui:GoogleOCR>
                                          </ActivityFunc>
                                        </ui:GetOCRText.OCREngine>
                                        <ui:GetOCRText.Target>
                                          <ui:Target Element="{x:Null}" Id="7814e6d0-af07-4efb-8b26-172788456dab" InformativeScreenshot="817c9146d627c3c2f88702446a2bbd17" Selector="&lt;uia automationid='ViewerControl' cls='PhotosApp.Viewer.ViewerControl' /&gt;">
                                            <ui:Target.ClippingRegion>
                                              <ui:Region Rectangle="390, 81, 93, 265" />
                                            </ui:Target.ClippingRegion>
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:GetOCRText.Target>
                                        <ui:GetOCRText.Text>
                                          <OutArgument x:TypeArguments="x:String">[DateExtact]</OutArgument>
                                        </ui:GetOCRText.Text>
                                      </ui:GetOCRText>
                                      <WriteLine DisplayName="Print the Extracted Date in the Output Panel" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[DateExtact]" />
                                      <Assign DisplayName="Assign the Data into String Array" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:String[]">[DateArray]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:String[]">[DateExtact.Split(Environment.NewLine.ToArray,StringSplitOptions.RemoveEmptyEntries)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:WindowScope.Body>
                              </ui:WindowScope>
                            </Sequence>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,160" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[&quot;Unable to extract data from Images, Exception - &quot;+exception.Message.ToString]" />
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">200,843.5</av:Point>
                              <av:Size x:Key="ShapeSize">200,153</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">300,996.5 300,1046.5</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence sap2010:Annotation.AnnotationText="Check if values from Date Column matches with Volumn Column&#xA;1. If same, add to datatable&#xA;2. If not, throw exception" DisplayName="Add values to DataTable" sap:VirtualizedContainerService.HintSize="200,153" sap2010:WorkflowViewState.IdRef="Sequence_21">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:Int32" Name="loopIndex" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[DateArray.Length =VolumnArray.Length]" DisplayName="If - check values Dates &amp; Volumn are same" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="[loopIndex]" DisplayName="For Each - iterate on all records" sap:VirtualizedContainerService.HintSize="307,248" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[DateArray]">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="x:Object">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{ DateArray(loopIndex).Replace(&quot; &quot;,&quot;&quot;).Trim, VolumnArray(loopIndex).Replace(&quot;.&quot;,&quot;&quot;).Replace(&quot; &quot;,&quot;&quot;).Trim }]" DataTable="[StocksDataTable]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                </ui:ForEach>
                              </If.Then>
                            </If>
                            <ui:WriteRange AddHeaders="True" DataTable="[StocksDataTable]" DisplayName="Write Range: Excel Sheet" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" StartingCell="A1" WorkbookPath="[OutputPath+OutputFileName]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:WriteRange>
                          </Sequence>
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID5">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">200,1046.5</av:Point>
                                  <av:Size x:Key="ShapeSize">200,123</av:Size>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence sap2010:Annotation.AnnotationText="Generate barchart in excel sheet with Date on “X” axis and volume on “Y” axis" DisplayName="Generate Chart " sap:VirtualizedContainerService.HintSize="200,123" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <bec:BarChart ExecutionResult="{x:Null}" FilePassword="{x:Null}" ImageCopy="{x:Null}" LegendRange="{x:Null}" ModifyPassword="{x:Null}" CellRange="A2:B13" ChartTitle="Stock Prices Bar Chart" ChartType="BarClustered" Delay="5" DisplayName="Bar Chart" FilePath="[OutputPath+OutputFileName]" sap:VirtualizedContainerService.HintSize="445,70" sap2010:WorkflowViewState.IdRef="BarChart_1" SheetName="Sheet1">
                                  <bec:BarChart.Options>
                                    <bec:ShowOptions AutoText="True" DataLabelsType="ShowLabel" HasLeaderLines="True" LegendKey="ShowLabel" Separator="" ShowBubbleSize="False" ShowCategoryName="False" ShowLegend="False" ShowPercentage="False" ShowSeriesName="False" ShowValue="False" />
                                  </bec:BarChart.Options>
                                  <bec:BarChart.Size>
                                    <bec:ChartSize Height="400" Left="75" Top="75" Width="450" />
                                  </bec:BarChart.Size>
                                </bec:BarChart>
                              </Sequence>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
  </Flowchart>
</Activity>